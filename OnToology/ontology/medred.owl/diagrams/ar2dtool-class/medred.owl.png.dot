digraph ar2dtool_diagram { 
rankdir=LR;
size="1501"
node [shape = rectangle, color="orange"]; "872ac4674e256924661f0e14a5df8099" "d332d9766f69fe557f0981b180f12b75" "6d9c14fe4cfe438380064a76708ffca7" "ca57a0cced5230b7db32d97d2efef341" "medred:Question" "bdebe07519ce713a1c9bec1e72e6a901" "medred:Instrument" "rdf:List" "medred:Item" "rdfs:Datatype" "medred:Study" "medred:ItemList" "medred:Section" "medred:ChoiceList" "medred:Choice" "medred:Operation" "medred:Observation" "p-plan:MultiStep" "p-plan:Activity" "p-plan:Step" "p-plan:Entity" "prov:Entity" "p-plan:Plan" "prov:Activity" "p-plan:Variable" ; /*classes style*/
	"sh:AndConstraintComponent-and" -> "sh:and" [ label = "sh:path" ];
	"sh:QualifiedMaxCountConstraintComponent" -> "sh:QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint" [ label = "sh:parameter" ];
	"sh:QualifiedMaxCountConstraintComponent" -> "sh:QualifiedMaxCountConstraintComponent-qualifiedValueShape" [ label = "sh:parameter" ];
	"sh:QualifiedMaxCountConstraintComponent" -> "sh:QualifiedMaxCountConstraintComponent-qualifiedMaxCount" [ label = "sh:parameter" ];
	"sh:MinLengthConstraintComponent" -> "sh:MinLengthConstraintComponent-minLength" [ label = "sh:parameter" ];
	"sh:DisjointConstraintComponent" -> "sh:DisjointConstraintComponent-disjoint" [ label = "sh:parameter" ];
	"medred:ofSection" -> "medred:Section" [ label = "rdfs:seeAlso" ];
	"medred:ofSection" -> "p-plan:isStepOfPlan" [ label = "rdfs:subPropertyOf" ];
	"sh:XoneConstraintComponent-xone" -> "sh:xone" [ label = "sh:path" ];
	"sh:MinInclusiveConstraintComponent-minInclusive" -> "sh:Literal" [ label = "sh:nodeKind" ];
	"sh:MinInclusiveConstraintComponent-minInclusive" -> "sh:minInclusive" [ label = "sh:path" ];
	"medred:Study" -> "disco:Study" [ label = "rdfs:seeAlso" ];
	"sh:HasValueConstraintComponent-hasValue" -> "sh:hasValue" [ label = "sh:path" ];
	"sh:OrConstraintComponent" -> "sh:OrConstraintComponent-or" [ label = "sh:parameter" ];
	"sh:AndConstraintComponent" -> "sh:AndConstraintComponent-and" [ label = "sh:parameter" ];
	"sh:MinInclusiveConstraintComponent" -> "sh:MinInclusiveConstraintComponent-minInclusive" [ label = "sh:parameter" ];
	"medred:dataType" -> "owl:topObjectProperty" [ label = "rdfs:subPropertyOf" ];
	"sh:LessThanOrEqualsConstraintComponent-lessThanOrEquals" -> "sh:IRI" [ label = "sh:nodeKind" ];
	"sh:LessThanOrEqualsConstraintComponent-lessThanOrEquals" -> "sh:lessThanOrEquals" [ label = "sh:path" ];
	"sh:MinCountConstraintComponent" -> "sh:MinCountConstraintComponent-minCount" [ label = "sh:parameter" ];
	"sh:ClassConstraintComponent" -> "sh:ClassConstraintComponent-class" [ label = "sh:parameter" ];
	"medred:Choice" -> "medred:ChoiceList" [ label = "rdfs:seeAlso" ];
	"sh:SPARQLConstraintComponent-sparql" -> "sh:sparql" [ label = "sh:path" ];
	"sh:QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint" -> "xsd:boolean" [ label = "sh:datatype" ];
	"sh:QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint" -> "sh:qualifiedValueShapesDisjoint" [ label = "sh:path" ];
	"sh:PropertyConstraintComponent-property" -> "sh:property" [ label = "sh:path" ];
	"sh:DisjointConstraintComponent-disjoint" -> "sh:IRI" [ label = "sh:nodeKind" ];
	"sh:DisjointConstraintComponent-disjoint" -> "sh:disjoint" [ label = "sh:path" ];
	"medred:" -> "http://w3id.org/hes-so/aislab" [ label = "dcterms:publisher" ];
	"medred:" -> "sh:" [ label = "owl:imports" ];
	"medred:" -> "http://rdf-vocabulary.ddialliance.org/discovery" [ label = "owl:imports" ];
	"medred:" -> "p-plan:" [ label = "owl:imports" ];
	"medred:" -> "http://purl.org/NET/rdflicense/cc-by4.0" [ label = "dcterms:license" ];
	"medred:" -> "http://jeanpi.org" [ label = "dcterms:creator" ];
	"medred:" -> "http://w3id.org/people/jpcik/me" [ label = "dcterms:creator" ];
	"medred:" -> "http://aislab.hevs.ch/" [ label = "dc:publisher" ];
	"sh:NotConstraintComponent" -> "sh:NotConstraintComponent-not" [ label = "sh:parameter" ];
	"sh:QualifiedMinCountConstraintComponent-qualifiedValueShape" -> "sh:qualifiedValueShape" [ label = "sh:path" ];
	"sh:LanguageInConstraintComponent" -> "sh:LanguageInConstraintComponent-languageIn" [ label = "sh:parameter" ];
	"sh:QualifiedMaxCountConstraintComponent-qualifiedMaxCount" -> "xsd:integer" [ label = "sh:datatype" ];
	"sh:QualifiedMaxCountConstraintComponent-qualifiedMaxCount" -> "sh:qualifiedMaxCount" [ label = "sh:path" ];
	"sh:LessThanConstraintComponent-lessThan" -> "sh:IRI" [ label = "sh:nodeKind" ];
	"sh:LessThanConstraintComponent-lessThan" -> "sh:lessThan" [ label = "sh:path" ];
	"sh:ClassConstraintComponent-class" -> "sh:IRI" [ label = "sh:nodeKind" ];
	"sh:ClassConstraintComponent-class" -> "sh:class" [ label = "sh:path" ];
	"sh:SPARQLConstraintComponent" -> "sh:SPARQLConstraintComponent-sparql" [ label = "sh:parameter" ];
	"sh:UniqueLangConstraintComponent-uniqueLang" -> "xsd:boolean" [ label = "sh:datatype" ];
	"sh:UniqueLangConstraintComponent-uniqueLang" -> "sh:uniqueLang" [ label = "sh:path" ];
	"sh:MaxExclusiveConstraintComponent-maxExclusive" -> "sh:Literal" [ label = "sh:nodeKind" ];
	"sh:MaxExclusiveConstraintComponent-maxExclusive" -> "sh:maxExclusive" [ label = "sh:path" ];
	"sh:ClosedConstraintComponent-closed" -> "xsd:boolean" [ label = "sh:datatype" ];
	"sh:ClosedConstraintComponent-closed" -> "sh:closed" [ label = "sh:path" ];
	"sh:LanguageInConstraintComponent-languageIn" -> "sh:languageIn" [ label = "sh:path" ];
	"sh:DatatypeConstraintComponent-datatype" -> "sh:IRI" [ label = "sh:nodeKind" ];
	"sh:DatatypeConstraintComponent-datatype" -> "sh:datatype" [ label = "sh:path" ];
	"sh:NodeKindConstraintComponent" -> "sh:NodeKindConstraintComponent-nodeKind" [ label = "sh:parameter" ];
	"sh:NotConstraintComponent-not" -> "sh:not" [ label = "sh:path" ];
	"sh:InConstraintComponent-in" -> "sh:in" [ label = "sh:path" ];
	"sh:MinCountConstraintComponent-minCount" -> "xsd:integer" [ label = "sh:datatype" ];
	"sh:MinCountConstraintComponent-minCount" -> "sh:minCount" [ label = "sh:path" ];
	"sh:MaxLengthConstraintComponent" -> "sh:MaxLengthConstraintComponent-maxLength" [ label = "sh:parameter" ];
	"sh:MaxExclusiveConstraintComponent" -> "sh:MaxExclusiveConstraintComponent-maxExclusive" [ label = "sh:parameter" ];
	"medred:instrument" -> "medred:Instrument" [ label = "rdfs:seeAlso" ];
	"sh:HasValueConstraintComponent" -> "sh:HasValueConstraintComponent-hasValue" [ label = "sh:parameter" ];
	"medred:ofInstrument" -> "medred:Instrument" [ label = "rdfs:seeAlso" ];
	"medred:ofInstrument" -> "p-plan:isStepOfPlan" [ label = "rdfs:subPropertyOf" ];
	"sh:EqualsConstraintComponent-equals" -> "sh:IRI" [ label = "sh:nodeKind" ];
	"sh:EqualsConstraintComponent-equals" -> "sh:equals" [ label = "sh:path" ];
	"sh:LessThanConstraintComponent" -> "sh:LessThanConstraintComponent-lessThan" [ label = "sh:parameter" ];
	"sh:LessThanOrEqualsConstraintComponent" -> "sh:LessThanOrEqualsConstraintComponent-lessThanOrEquals" [ label = "sh:parameter" ];
	"sh:MaxCountConstraintComponent" -> "sh:MaxCountConstraintComponent-maxCount" [ label = "sh:parameter" ];
	"sh:MaxInclusiveConstraintComponent-maxInclusive" -> "sh:Literal" [ label = "sh:nodeKind" ];
	"sh:MaxInclusiveConstraintComponent-maxInclusive" -> "sh:maxInclusive" [ label = "sh:path" ];
	"sh:InConstraintComponent" -> "sh:InConstraintComponent-in" [ label = "sh:parameter" ];
	"medred:studyName" -> "dcterms:title" [ label = "rdfs:subPropertyOf" ];
	"sh:QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint" -> "xsd:boolean" [ label = "sh:datatype" ];
	"sh:QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint" -> "sh:qualifiedValueShapesDisjoint" [ label = "sh:path" ];
	"sh:EqualsConstraintComponent" -> "sh:EqualsConstraintComponent-equals" [ label = "sh:parameter" ];
	"sh:PropertyConstraintComponent" -> "sh:PropertyConstraintComponent-property" [ label = "sh:parameter" ];
	"sh:NodeKindConstraintComponent-nodeKind" -> "6d0a3537:15bc8f6b6a4:-7ffc" [ label = "sh:in" ];
	"sh:NodeKindConstraintComponent-nodeKind" -> "sh:nodeKind" [ label = "sh:path" ];
	"sh:MinLengthConstraintComponent-minLength" -> "xsd:integer" [ label = "sh:datatype" ];
	"sh:MinLengthConstraintComponent-minLength" -> "sh:minLength" [ label = "sh:path" ];
	"sh:PatternConstraintComponent-flags" -> "xsd:string" [ label = "sh:datatype" ];
	"sh:PatternConstraintComponent-flags" -> "sh:flags" [ label = "sh:path" ];
	"sh:OrConstraintComponent-or" -> "sh:or" [ label = "sh:path" ];
	"sh:QualifiedMinCountConstraintComponent-qualifiedMinCount" -> "xsd:integer" [ label = "sh:datatype" ];
	"sh:QualifiedMinCountConstraintComponent-qualifiedMinCount" -> "sh:qualifiedMinCount" [ label = "sh:path" ];
	"sh:NodeConstraintComponent-node" -> "sh:node" [ label = "sh:path" ];
	"sh:DatatypeConstraintComponent" -> "sh:DatatypeConstraintComponent-datatype" [ label = "sh:parameter" ];
	"sh:DerivedValuesConstraintComponent" -> "c7680181ec7e9037d72dc3ec074dbe3b" [ label = "sh:parameter" ];
	"sh:MaxLengthConstraintComponent-maxLength" -> "xsd:integer" [ label = "sh:datatype" ];
	"sh:MaxLengthConstraintComponent-maxLength" -> "sh:maxLength" [ label = "sh:path" ];
	"sh:MaxInclusiveConstraintComponent" -> "sh:MaxInclusiveConstraintComponent-maxInclusive" [ label = "sh:parameter" ];
	"sh:QualifiedMinCountConstraintComponent" -> "sh:QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint" [ label = "sh:parameter" ];
	"sh:QualifiedMinCountConstraintComponent" -> "sh:QualifiedMinCountConstraintComponent-qualifiedValueShape" [ label = "sh:parameter" ];
	"sh:QualifiedMinCountConstraintComponent" -> "sh:QualifiedMinCountConstraintComponent-qualifiedMinCount" [ label = "sh:parameter" ];
	"sh:" -> "http://www.w3.org/ns/shacl-shacl#" [ label = "sh:suggestedShapesGraph" ];
	"sh:" -> "caf17098d24ef2a65eb6f2770e270cb0" [ label = "sh:declare" ];
	"sh:ClosedConstraintComponent" -> "sh:ClosedConstraintComponent-ignoredProperties" [ label = "sh:parameter" ];
	"sh:ClosedConstraintComponent" -> "sh:ClosedConstraintComponent-closed" [ label = "sh:parameter" ];
	"sh:XoneConstraintComponent" -> "sh:XoneConstraintComponent-xone" [ label = "sh:parameter" ];
	"NULL" -> "d447f511469c6a90d721d2bde974199a" [ label = "rdf:rest" ];
	"NULL" -> "medred:Instrument" [ label = "rdf:first" ];
	"NULL" -> "sh:Literal" [ label = "rdf:first" ];
	"NULL" -> "xsd:string" [ label = "owl:someValuesFrom" ];
	"NULL" -> "62e5f008e61d34319fed5e6a72155618" [ label = "owl:oneOf" ];
	"NULL" -> "a63f7427eba84be0a8107c604bbfa429" [ label = "owl:onProperty" ];
	"NULL" -> "medred:ChoiceList" [ label = "rdf:first" ];
	"NULL" -> "6d0a3537:15bc8f6b6a4:-7ff8" [ label = "rdf:rest" ];
	"NULL" -> "sh:BlankNode" [ label = "rdf:first" ];
	"NULL" -> "dcterms:title" [ label = "owl:onProperty" ];
	"NULL" -> "6d0a3537:15bc8f6b6a4:-7ffb" [ label = "rdf:rest" ];
	"NULL" -> "0dca03e4ffd802f1344a0c4497578f4e" [ label = "owl:unionOf" ];
	"NULL" -> "sh:derivedValues" [ label = "sh:path" ];
	"NULL" -> "6d9c14fe4cfe438380064a76708ffca7" [ label = "rdf:first" ];
	"NULL" -> "medred:ItemList" [ label = "rdf:first" ];
	"NULL" -> "medred:Question" [ label = "owl:someValuesFrom" ];
	"NULL" -> "sh:BlankNodeOrIRI" [ label = "rdf:first" ];
	"NULL" -> "sh:IRI" [ label = "rdf:first" ];
	"NULL" -> "sh:BlankNodeOrLiteral" [ label = "rdf:first" ];
	"NULL" -> "medred:Item" [ label = "owl:allValuesFrom" ];
	"NULL" -> "074120f6934dcc7af18baf5de3750282" [ label = "rdf:rest" ];
	"NULL" -> "sh:ValuesDeriver" [ label = "sh:class" ];
	"NULL" -> "e66ef0312a23504341cf57ceb45d4dc1" [ label = "owl:unionOf" ];
	"NULL" -> "6d0a3537:15bc8f6b6a4:-7ff7" [ label = "rdf:rest" ];
	"NULL" -> "bdebe07519ce713a1c9bec1e72e6a901" [ label = "owl:allValuesFrom" ];
	"NULL" -> "rdf:nil" [ label = "rdf:first" ];
	"NULL" -> "6d0a3537:15bc8f6b6a4:-7ffa" [ label = "rdf:rest" ];
	"NULL" -> "6d2590a7534809c7e3983be3a2ed914e" [ label = "owl:oneOf" ];
	"NULL" -> "rdf:nil" [ label = "rdf:rest" ];
	"NULL" -> "872ac4674e256924661f0e14a5df8099" [ label = "rdf:first" ];
	"NULL" -> "medred:Choice" [ label = "owl:allValuesFrom" ];
	"NULL" -> "medred:Item" [ label = "rdf:first" ];
	"NULL" -> "97343d60dcdf92f0cd56e4b939a138e2" [ label = "owl:unionOf" ];
	"NULL" -> "7ccea9454fd627fd18b5075741b1ffed" [ label = "rdf:rest" ];
	"NULL" -> "rdf:first" [ label = "owl:onProperty" ];
	"NULL" -> "ca57a0cced5230b7db32d97d2efef341" [ label = "owl:allValuesFrom" ];
	"NULL" -> "6d0a3537:15bc8f6b6a4:-7ff9" [ label = "rdf:rest" ];
	"NULL" -> "sh:IRIOrLiteral" [ label = "rdf:first" ];
	"NULL" -> "rdf:rest" [ label = "owl:onProperty" ];
	"sh:NodeConstraintComponent" -> "sh:NodeConstraintComponent-node" [ label = "sh:parameter" ];
	"medred:items" -> "medred:ItemList" [ label = "rdfs:seeAlso" ];
	"sh:MaxCountConstraintComponent-maxCount" -> "xsd:integer" [ label = "sh:datatype" ];
	"sh:MaxCountConstraintComponent-maxCount" -> "sh:maxCount" [ label = "sh:path" ];
	"sh:MinExclusiveConstraintComponent" -> "sh:MinExclusiveConstraintComponent-minExclusive" [ label = "sh:parameter" ];
	"sh:ClosedConstraintComponent-ignoredProperties" -> "sh:ignoredProperties" [ label = "sh:path" ];
	"sh:PatternConstraintComponent-pattern" -> "xsd:string" [ label = "sh:datatype" ];
	"sh:PatternConstraintComponent-pattern" -> "sh:pattern" [ label = "sh:path" ];
	"medred:choices" -> "medred:Choice" [ label = "rdfs:seeAlso" ];
	"p-plan:isSubPlanOfPlan" -> "owl:topObjectProperty" [ label = "rdfs:subPropertyOf" ];
	"sh:PatternConstraintComponent" -> "sh:PatternConstraintComponent-flags" [ label = "sh:parameter" ];
	"sh:PatternConstraintComponent" -> "sh:PatternConstraintComponent-pattern" [ label = "sh:parameter" ];
	"sh:MinExclusiveConstraintComponent-minExclusive" -> "sh:Literal" [ label = "sh:nodeKind" ];
	"sh:MinExclusiveConstraintComponent-minExclusive" -> "sh:minExclusive" [ label = "sh:path" ];
	"sh:UniqueLangConstraintComponent" -> "sh:UniqueLangConstraintComponent-uniqueLang" [ label = "sh:parameter" ];
	"sh:QualifiedMaxCountConstraintComponent-qualifiedValueShape" -> "sh:qualifiedValueShape" [ label = "sh:path" ];
	"sh:ValidationReport" -> "xsd:boolean" [ label = "sh:conforms" ];
	"prov:Entity" -> "prov:Activity" [ label = "prov:wasGeneratedBy" ];
	"owl:Thing" -> "rdfs:Resource" [ label = "sh:zeroOrOnePath" ];
	"sh:SPARQLSelectExecutable" -> "xsd:string" [ label = "sh:select" ];
	"sh:PrefixDeclaration" -> "xsd:string" [ label = "sh:prefix" ];
	"p-plan:Step" -> "p-plan:Variable" [ label = "p-plan:hasOutputVar" ];
	"sh:AbstractResult" -> "sh:ConstraintComponent" [ label = "sh:sourceConstraintComponent" ];
	"owl:Thing" -> "rdf:List" [ label = "sh:xone" ];
	"prov:Activity" -> "prov:Entity" [ label = "prov:used" ];
	"owl:Thing" -> "rdf:List" [ label = "sh:in" ];
	"p-plan:Variable" -> "p-plan:Step" [ label = "p-plan:isInputVarOf" ];
	"p-plan:Variable" -> "p-plan:Step" [ label = "p-plan:isOutputVarOf" ];
	"medred:Operation" -> "owl:Thing" [ label = "medred:calculation" ];
	"owl:Thing" -> "rdfs:Resource" [ label = "sh:inversePath" ];
	"sh:SPARQLAskExecutable" -> "xsd:string" [ label = "sh:ask" ];
	"sh:Parameterizable" -> "sh:Parameter" [ label = "sh:parameter" ];
	"owl:Thing" -> "sh:NodeShape" [ label = "sh:node" ];
	"p-plan:Variable" -> "p-plan:Plan" [ label = "p-plan:isVariableOfPlan" ];
	"sh:SPARQLExecutable" -> "owl:Ontology" [ label = "sh:prefixes" ];
	"sh:Shape" -> "sh:Severity" [ label = "sh:severity" ];
	"owl:Thing" -> "rdfs:Class" [ label = "sh:class" ];
	"sh:PropertyShape" -> "owl:Thing" [ label = "sh:name" ];
	"owl:Thing" -> "rdf:Property" [ label = "sh:lessThanOrEquals" ];
	"owl:Thing" -> "rdfs:Resource" [ label = "sh:zeroOrMorePath" ];
	"medred:Study" -> "medred:Instrument" [ label = "medred:instrument" ];
	"owl:Thing" -> "sh:Shape" [ label = "sh:not" ];
	"sh:PropertyShape" -> "rdfs:Resource" [ label = "sh:path" ];
	"owl:Thing" -> "rdf:List" [ label = "sh:languageIn" ];
	"owl:Thing" -> "rdf:Property" [ label = "sh:lessThan" ];
	"sh:AbstractResult" -> "rdfs:Resource" [ label = "sh:resultPath" ];
	"owl:Thing" -> "xsd:integer" [ label = "sh:qualifiedMinCount" ];
	"sh:Shape" -> "xsd:boolean" [ label = "sh:deactivated" ];
	"medred:Choice" -> "rdfs:Literal" [ label = "medred:hasValue" ];
	"sh:ConstraintComponent" -> "sh:Validator" [ label = "sh:validator" ];
	"owl:Ontology" -> "owl:Ontology" [ label = "sh:suggestedShapesGraph" ];
	"owl:Thing" -> "rdf:List" [ label = "sh:alternativePath" ];
	"sh:SPARQLUpdateExecutable" -> "xsd:string" [ label = "sh:update" ];
	"owl:Thing" -> "xsd:integer" [ label = "sh:qualifiedMaxCount" ];
	"owl:Thing" -> "sh:NodeKind" [ label = "sh:nodeKind" ];
	"medred:Study" -> "xsd:string" [ label = "medred:studyName" ];
	"sh:Shape" -> "rdf:Property" [ label = "sh:targetObjectsOf" ];
	"owl:Thing" -> "xsd:boolean" [ label = "sh:closed" ];
	"p-plan:Variable" -> "xsd:string" [ label = "medred:varName" ];
	"owl:Thing" -> "rdf:List" [ label = "sh:or" ];
	"sh:PrefixDeclaration" -> "xsd:anyURI" [ label = "sh:namespace" ];
	"owl:Thing" -> "sh:ValuesDeriver" [ label = "sh:derivedValues" ];
	"sh:PropertyShape" -> "owl:Thing" [ label = "sh:description" ];
	"owl:Thing" -> "rdf:List" [ label = "sh:and" ];
	"owl:Thing" -> "rdfs:Resource" [ label = "sh:oneOrMorePath" ];
	"d332d9766f69fe557f0981b180f12b75" -> "medred:ItemList" [ label = "medred:items" ];
	"owl:Thing" -> "xsd:string" [ label = "sh:flags" ];
	"owl:Thing" -> "rdf:List" [ label = "sh:ignoredProperties" ];
	"sh:PropertyShape" -> "sh:PropertyGroup" [ label = "sh:group" ];
	"sh:AbstractResult" -> "sh:Severity" [ label = "sh:resultSeverity" ];
	"sh:ResultAnnotation" -> "xsd:string" [ label = "sh:annotationVarName" ];
	"sh:PropertyShape" -> "owl:Thing" [ label = "sh:defaultValue" ];
	"sh:SPARQLSelectValidator" -> "sh:ResultAnnotation" [ label = "sh:resultAnnotation" ];
	"sh:ValidationReport" -> "xsd:boolean" [ label = "sh:shapesGraphWellFormed" ];
	"sh:Shape" -> "rdf:Property" [ label = "sh:targetSubjectsOf" ];
	"owl:Thing" -> "xsd:boolean" [ label = "sh:uniqueLang" ];
	"owl:Thing" -> "rdf:Property" [ label = "sh:disjoint" ];
	"sh:AbstractResult" -> "owl:Thing" [ label = "sh:value" ];
	"sh:Shape" -> "owl:Thing" [ label = "sh:targetNode" ];
	"owl:Thing" -> "xsd:integer" [ label = "sh:maxLength" ];
	"sh:AbstractResult" -> "owl:Thing" [ label = "sh:resultMessage" ];
	"prov:Entity" -> "prov:Entity" [ label = "prov:wasDerivedFrom" ];
	"p-plan:Step" -> "p-plan:Variable" [ label = "p-plan:hasInputVar" ];
	"sh:Shape" -> "rdfs:Class" [ label = "sh:targetClass" ];
	"sh:Parameter" -> "xsd:boolean" [ label = "sh:optional" ];
	"owl:Thing" -> "xsd:integer" [ label = "sh:minCount" ];
	"medred:Item" -> "medred:Instrument" [ label = "medred:ofInstrument" ];
	"owl:Thing" -> "xsd:string" [ label = "sh:pattern" ];
	"medred:Item" -> "medred:Section" [ label = "medred:ofSection" ];
	"owl:Thing" -> "sh:Shape" [ label = "sh:qualifiedValueShape" ];
	"p-plan:Plan" -> "p-plan:Plan" [ label = "p-plan:isSubPlanOfPlan" ];
	"owl:Thing" -> "rdf:Property" [ label = "sh:equals" ];
	"sh:AbstractResult" -> "sh:AbstractResult" [ label = "sh:detail" ];
	"p-plan:Step" -> "p-plan:Step" [ label = "p-plan:isPrecededBy" ];
	"sh:Parameterizable" -> "owl:Thing" [ label = "sh:labelTemplate" ];
	"owl:Thing" -> "rdfs:Datatype" [ label = "sh:datatype" ];
	"sh:ResultAnnotation" -> "rdf:Property" [ label = "sh:annotationProperty" ];
	"sh:AbstractResult" -> "sh:Shape" [ label = "sh:sourceShape" ];
	"owl:Ontology" -> "sh:PrefixDeclaration" [ label = "sh:declare" ];
	"sh:ResultAnnotation" -> "owl:Thing" [ label = "sh:annotationValue" ];
	"sh:SPARQLConstructExecutable" -> "xsd:string" [ label = "sh:construct" ];
	"p-plan:Step" -> "p-plan:Plan" [ label = "p-plan:isStepOfPlan" ];
	"owl:Thing" -> "xsd:integer" [ label = "sh:maxCount" ];
	"sh:ConstraintComponent" -> "sh:Validator" [ label = "sh:propertyValidator" ];
	"sh:AbstractResult" -> "owl:Thing" [ label = "sh:sourceConstraint" ];
	"p-plan:MultiStep" -> "p-plan:Plan" [ label = "p-plan:isDecomposedAsPlan" ];
	"medred:Question" -> "medred:ChoiceList" [ label = "medred:choices" ];
	"owl:Thing" -> "xsd:integer" [ label = "sh:minLength" ];
	"sh:Function" -> "rdfs:Class" [ label = "sh:returnType" ];
	"sh:ConstraintComponent" -> "sh:Validator" [ label = "sh:nodeValidator" ];
	"sh:AbstractResult" -> "owl:Thing" [ label = "sh:focusNode" ];
	"owl:Thing" -> "xsd:boolean" [ label = "sh:qualifiedValueShapesDisjoint" ];
	"sh:Shape" -> "sh:SPARQLConstraint" [ label = "sh:sparql" ];
	"sh:Shape" -> "sh:Target" [ label = "sh:target" ];
	"p-plan:Variable" -> "rdfs:Datatype" [ label = "medred:dataType" ];
	"medred:Observation" -> "owl:Thing" [ label = "medred:dataValue" ];
	"p-plan:Activity" -> "p-plan:Step" [ label = "p-plan:correspondsToStep" ];
	"p-plan:Entity" -> "p-plan:Variable" [ label = "p-plan:correspondsToVariable" ];
	"owl:Ontology" -> "owl:Ontology" [ label = "sh:shapesGraph" ];
	"sh:Shape" -> "sh:PropertyShape" [ label = "sh:property" ];
	"medred:Item" -> "sh:PropertyShape" [ label = "medred:validationShape" ];
	"sh:ValidationReport" -> "sh:ValidationResult" [ label = "sh:result" ];

}
